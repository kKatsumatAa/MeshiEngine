#include "Basic.hlsli"

Texture2D<float4> tex : register(t0); //0番スロットに設定されたテクスチャ
SamplerState smp : register(s0);      //0番スロットに設定されたサンプラー


float4 main(VSOutput input) : SV_TARGET
{
	//テクスチャマッピング
	float4 texcolor = tex.Sample(smp, input.uv);

	//シェーディングによる色
	float4 shadecolor;
	//光沢度
	const float shininess = 4.0f;
	//頂点から視点への方向ベクトル
	float3 eyedir = normalize(cameraPos - input.worldpos.xyz);
	//ライトに向かうベクトルと法線の内積
	float3 dotlightnormal = dot(lightv, input.normal);
	//反射光ベクトル
	float3 reflect = normalize(-lightv + 2 * dotlightnormal * input.normal);
	//環境反射光
	float3 ambient = 0.06f;
	//拡散反射光
	float3 diffuse = dotlightnormal * 0.8f;
	//鏡面反射光（saturate->0~1へのクランプ）
	float3 specular = pow(saturate(dot(reflect, eyedir)), shininess) * 0.1f;
	//全て加算
	shadecolor.rgb = (ambient + diffuse + specular) * lightcolor;
	shadecolor.a = 1.0f;

	//シェーディングによる色で描画
	return shadecolor * texcolor * color;
}
